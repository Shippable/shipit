resources:
  - name: shipit_repo
    type: gitRepo
    integration: avinci_gh
    pointer:
      sourceName: shippable/shipit
      branch: master

  - name: shipit_gh_ssh
    type: integration
    integration: avi_gh_ssh

  - name: shipit_bits_access_cli
    type: cliConfig
    integration: aws_bits_access
    pointer:
      region: us-east-1

  - name: shipit_rc_pem
    type: integration
    integration: aws-rc-pem

  - name: shipit_rc_swarm
    type: params
    version:
      params:
        secure: bfSsma2F5exzt18nXLbbXUcsRjnQqWcnkKWInlBh+a7LYdo1G9Cwv9kiIkMi/+kcFL86QHnJmdHdvxbgtPUoa18GBGU8LLLg05pvQTBmjnrGQ0cUg9DJPGY5Jvc1eJdG0ABju+QCPjEGzY5VRWhHkabXg7kROAeQ0Eexe6GuK379cOw+ddnyP1Q+lvcIm2iCZVf7ODBgC69cN+yXU/0WQg3X6H/WcSbZPYdx22Tk3uVa0kloKc4CE0BwMWIPQHc69yE+vRxMkS6iJ6dlm+MAK7g5mXFYQ4DVbwxpmgFJyJHVJtX7LnxqbQ+nlJqe/Nk6zXKkMMvZ5DId9weMAvSVLw==

  - name: shippable_version
    type: version
    seed:
      versionName: "6.12.3"

  - name: rc_slack
    type: notification
    integration: ship-slack
    pointer:
      recipients:
        - "#rc"

jobs:
  - name: mktg_patch
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: shipit_repo
        switch: off
      - IN: shipit_bits_access_cli
        scopes:
          - ecr
        switch: off
      - IN: mktg_sh_img
        switch: off
      - IN: prod_release
        switch: off
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "shipit_repo")
            - ./patchImage.sh mktg 374168611083.dkr.ecr.us-east-1.amazonaws.com prod_release
            - popd

  - name: rc_deploy
    type: runSh
    dependencyMode: strict
    runtime:
      timeoutMinutes: 15
    on_start:
      - NOTIFY: rc_slack
    steps:
      - IN: shipit_repo
        switch: off
      - IN: shipit_rc_pem
        switch: off
      - IN: shipit_rc_swarm
        switch: off
      - IN: baseami_patch
      - IN: api_sh_img
      - IN: www_sh_img
      - IN: nexec_sh_img
      - IN: mktg_sh_img
      - IN: micro_sh_img
      - IN: u16admiral_sh_img
      - IN: shipit_bits_access_cli
        scopes:
          - ecr
        switch: off
      - TASK:
          name: deploy_to_rc
          script:
            - pushd $(shipctl get_resource_state "shipit_repo")
            - ./deployRc.sh
            - popd
      - TASK:
          name: cleanup_untagged_images
          script:
            - |
              repositories=$(aws ecr describe-repositories --output text | awk '{print $5}')
              while read -r repo; do
                untagged_images=$(aws ecr list-images --repository-name $repo --filter tagStatus=UNTAGGED --query 'imageIds[*]' --output text)
                while read -r untagged_image; do
                  if [ ! -z "$untagged_image" ]; then
                    echo "Deleting untagged image: $untagged_image from repo: $repo"
                    aws ecr batch-delete-image --repository-name $repo --image-ids imageDigest="$untagged_image"
                  else
                    echo "No untagged image present in repo: $repo"
                  fi
                done <<< "$untagged_images"
              done <<< "$repositories"
    on_success:
      - NOTIFY: rc_slack
    on_failure:
      - NOTIFY: rc_slack

  - name: prod_release
    type: release
    steps:
      - IN: shippable_version
        switch: off
      - IN: bvt
        switch: off
      - TASK: managed
        bump: patch
